// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mktdata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mktdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace streaminterface {
class InstrumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Instrument>
     _instance;
} _Instrument_default_instance_;
class TradeMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TradeMessage>
     _instance;
} _TradeMessage_default_instance_;
class MarketDepthLevelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDepthLevel>
     _instance;
} _MarketDepthLevel_default_instance_;
class BookDepthMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BookDepthMessage>
     _instance;
} _BookDepthMessage_default_instance_;
class DebugInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo>
     _instance;
} _DebugInfo_default_instance_;

namespace protobuf_mktdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, instrumenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, underlyingsymbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, expirationday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, expirationmonth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, expirationyear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, strike_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instrument, iscalloption_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, instruments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, exchange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, bidpricebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, askpricebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, bidsizebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, asksizebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, bidexchangebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, askexchangebbo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, dayshighestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, dayslowestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, daysopeningprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeMessage, daystotalvolume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDepthLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDepthLevel, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDepthLevel, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDepthLevel, exchange_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, instruments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, bidbooklevels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, askbooklevels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, numbidlevels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BookDepthMessage, numasklevels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, messagecreatedtimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, messagesenttimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, messagenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, other_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Instrument)},
  { 12, -1, sizeof(TradeMessage)},
  { 32, -1, sizeof(MarketDepthLevel)},
  { 40, -1, sizeof(BookDepthMessage)},
  { 51, -1, sizeof(DebugInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Instrument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TradeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDepthLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BookDepthMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DebugInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mktdata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Instrument_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Instrument_default_instance_);_TradeMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TradeMessage_default_instance_);_MarketDepthLevel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDepthLevel_default_instance_);_BookDepthMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BookDepthMessage_default_instance_);_DebugInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DebugInfo_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmktdata.proto\022\017streaminterface\"\204\002\n\nIns"
      "trument\022=\n\016InstrumentType\030\001 \001(\0162%.stream"
      "interface.Instrument.InstrType\022\030\n\020Underl"
      "yingSymbol\030\002 \001(\t\022\025\n\rExpirationDay\030\003 \001(\005\022"
      "\027\n\017ExpirationMonth\030\004 \001(\005\022\026\n\016ExpirationYe"
      "ar\030\005 \001(\005\022\016\n\006Strike\030\006 \001(\002\022\024\n\014IsCallOption"
      "\030\007 \001(\010\"/\n\tInstrType\022\n\n\006EQUITY\020\000\022\n\n\006OPTIO"
      "N\020\001\022\n\n\006FUTURE\020\002\"\352\002\n\014TradeMessage\022\021\n\tTime"
      "stamp\030\001 \001(\004\0220\n\013Instruments\030\002 \003(\0132\033.strea"
      "minterface.Instrument\022\r\n\005Price\030\003 \001(\002\022\014\n\004"
      "Size\030\004 \001(\r\022\020\n\010Exchange\030\005 \001(\t\022\023\n\013BidPrice"
      "BBO\030\006 \001(\002\022\023\n\013AskPriceBBO\030\007 \001(\002\022\022\n\nBidSiz"
      "eBBO\030\010 \001(\r\022\022\n\nAskSizeBBO\030\t \001(\r\022\026\n\016BidExc"
      "hangeBBO\030\n \001(\t\022\026\n\016AskExchangeBBO\030\013 \001(\t\022\030"
      "\n\020DaysHighestPrice\030\014 \001(\002\022\027\n\017DaysLowestPr"
      "ice\030\r \001(\002\022\030\n\020DaysOpeningPrice\030\016 \001(\002\022\027\n\017D"
      "aysTotalVolume\030\017 \001(\r\"A\n\020MarketDepthLevel"
      "\022\r\n\005Price\030\001 \001(\002\022\014\n\004Size\030\002 \001(\r\022\020\n\010Exchang"
      "e\030\003 \001(\t\"\367\001\n\020BookDepthMessage\022\021\n\tTimestam"
      "p\030\001 \001(\004\0220\n\013Instruments\030\002 \003(\0132\033.streamint"
      "erface.Instrument\0228\n\rBidBookLevels\030\003 \003(\013"
      "2!.streaminterface.MarketDepthLevel\0228\n\rA"
      "skBookLevels\030\004 \003(\0132!.streaminterface.Mar"
      "ketDepthLevel\022\024\n\014NumBidLevels\030\005 \001(\r\022\024\n\014N"
      "umAskLevels\030\006 \001(\r\"p\n\tDebugInfo\022\037\n\027Messag"
      "eCreatedTimestamp\030\001 \001(\004\022\034\n\024MessageSentTi"
      "mestamp\030\002 \001(\004\022\025\n\rMessageNumber\030\003 \001(\004\022\r\n\005"
      "Other\030\004 \001(\tB\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1104);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mktdata.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mktdata_2eproto

const ::google::protobuf::EnumDescriptor* Instrument_InstrType_descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_enum_descriptors[0];
}
bool Instrument_InstrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instrument_InstrType Instrument::EQUITY;
const Instrument_InstrType Instrument::OPTION;
const Instrument_InstrType Instrument::FUTURE;
const Instrument_InstrType Instrument::InstrType_MIN;
const Instrument_InstrType Instrument::InstrType_MAX;
const int Instrument::InstrType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instrument::kInstrumentTypeFieldNumber;
const int Instrument::kUnderlyingSymbolFieldNumber;
const int Instrument::kExpirationDayFieldNumber;
const int Instrument::kExpirationMonthFieldNumber;
const int Instrument::kExpirationYearFieldNumber;
const int Instrument::kStrikeFieldNumber;
const int Instrument::kIsCallOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instrument::Instrument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mktdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:streaminterface.Instrument)
}
Instrument::Instrument(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_mktdata_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:streaminterface.Instrument)
}
Instrument::Instrument(const Instrument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  underlyingsymbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.underlyingsymbol().size() > 0) {
    underlyingsymbol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlyingsymbol(),
      GetArenaNoVirtual());
  }
  ::memcpy(&instrumenttype_, &from.instrumenttype_,
    static_cast<size_t>(reinterpret_cast<char*>(&iscalloption_) -
    reinterpret_cast<char*>(&instrumenttype_)) + sizeof(iscalloption_));
  // @@protoc_insertion_point(copy_constructor:streaminterface.Instrument)
}

void Instrument::SharedCtor() {
  underlyingsymbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instrumenttype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iscalloption_) -
      reinterpret_cast<char*>(&instrumenttype_)) + sizeof(iscalloption_));
  _cached_size_ = 0;
}

Instrument::~Instrument() {
  // @@protoc_insertion_point(destructor:streaminterface.Instrument)
  SharedDtor();
}

void Instrument::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  underlyingsymbol_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void Instrument::ArenaDtor(void* object) {
  Instrument* _this = reinterpret_cast< Instrument* >(object);
  (void)_this;
}
void Instrument::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Instrument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instrument::descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instrument& Instrument::default_instance() {
  protobuf_mktdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

Instrument* Instrument::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Instrument>(arena);
}

void Instrument::Clear() {
// @@protoc_insertion_point(message_clear_start:streaminterface.Instrument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  underlyingsymbol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&instrumenttype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iscalloption_) -
      reinterpret_cast<char*>(&instrumenttype_)) + sizeof(iscalloption_));
  _internal_metadata_.Clear();
}

bool Instrument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:streaminterface.Instrument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .streaminterface.Instrument.InstrType InstrumentType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_instrumenttype(static_cast< ::streaminterface::Instrument_InstrType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UnderlyingSymbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlyingsymbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlyingsymbol().data(), static_cast<int>(this->underlyingsymbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.Instrument.UnderlyingSymbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExpirationDay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expirationday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExpirationMonth = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expirationmonth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExpirationYear = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expirationyear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Strike = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &strike_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsCallOption = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscalloption_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:streaminterface.Instrument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:streaminterface.Instrument)
  return false;
#undef DO_
}

void Instrument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:streaminterface.Instrument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .streaminterface.Instrument.InstrType InstrumentType = 1;
  if (this->instrumenttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->instrumenttype(), output);
  }

  // string UnderlyingSymbol = 2;
  if (this->underlyingsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingsymbol().data(), static_cast<int>(this->underlyingsymbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.Instrument.UnderlyingSymbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->underlyingsymbol(), output);
  }

  // int32 ExpirationDay = 3;
  if (this->expirationday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->expirationday(), output);
  }

  // int32 ExpirationMonth = 4;
  if (this->expirationmonth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->expirationmonth(), output);
  }

  // int32 ExpirationYear = 5;
  if (this->expirationyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->expirationyear(), output);
  }

  // float Strike = 6;
  if (this->strike() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->strike(), output);
  }

  // bool IsCallOption = 7;
  if (this->iscalloption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->iscalloption(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:streaminterface.Instrument)
}

::google::protobuf::uint8* Instrument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:streaminterface.Instrument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .streaminterface.Instrument.InstrType InstrumentType = 1;
  if (this->instrumenttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->instrumenttype(), target);
  }

  // string UnderlyingSymbol = 2;
  if (this->underlyingsymbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingsymbol().data(), static_cast<int>(this->underlyingsymbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.Instrument.UnderlyingSymbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->underlyingsymbol(), target);
  }

  // int32 ExpirationDay = 3;
  if (this->expirationday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->expirationday(), target);
  }

  // int32 ExpirationMonth = 4;
  if (this->expirationmonth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->expirationmonth(), target);
  }

  // int32 ExpirationYear = 5;
  if (this->expirationyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->expirationyear(), target);
  }

  // float Strike = 6;
  if (this->strike() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->strike(), target);
  }

  // bool IsCallOption = 7;
  if (this->iscalloption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->iscalloption(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:streaminterface.Instrument)
  return target;
}

size_t Instrument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:streaminterface.Instrument)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UnderlyingSymbol = 2;
  if (this->underlyingsymbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlyingsymbol());
  }

  // .streaminterface.Instrument.InstrType InstrumentType = 1;
  if (this->instrumenttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instrumenttype());
  }

  // int32 ExpirationDay = 3;
  if (this->expirationday() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expirationday());
  }

  // int32 ExpirationMonth = 4;
  if (this->expirationmonth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expirationmonth());
  }

  // int32 ExpirationYear = 5;
  if (this->expirationyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expirationyear());
  }

  // float Strike = 6;
  if (this->strike() != 0) {
    total_size += 1 + 4;
  }

  // bool IsCallOption = 7;
  if (this->iscalloption() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instrument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:streaminterface.Instrument)
  GOOGLE_DCHECK_NE(&from, this);
  const Instrument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instrument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:streaminterface.Instrument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:streaminterface.Instrument)
    MergeFrom(*source);
  }
}

void Instrument::MergeFrom(const Instrument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:streaminterface.Instrument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.underlyingsymbol().size() > 0) {
    set_underlyingsymbol(from.underlyingsymbol());
  }
  if (from.instrumenttype() != 0) {
    set_instrumenttype(from.instrumenttype());
  }
  if (from.expirationday() != 0) {
    set_expirationday(from.expirationday());
  }
  if (from.expirationmonth() != 0) {
    set_expirationmonth(from.expirationmonth());
  }
  if (from.expirationyear() != 0) {
    set_expirationyear(from.expirationyear());
  }
  if (from.strike() != 0) {
    set_strike(from.strike());
  }
  if (from.iscalloption() != 0) {
    set_iscalloption(from.iscalloption());
  }
}

void Instrument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:streaminterface.Instrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instrument::CopyFrom(const Instrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:streaminterface.Instrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instrument::IsInitialized() const {
  return true;
}

void Instrument::Swap(Instrument* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Instrument* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Instrument::UnsafeArenaSwap(Instrument* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Instrument::InternalSwap(Instrument* other) {
  using std::swap;
  underlyingsymbol_.Swap(&other->underlyingsymbol_);
  swap(instrumenttype_, other->instrumenttype_);
  swap(expirationday_, other->expirationday_);
  swap(expirationmonth_, other->expirationmonth_);
  swap(expirationyear_, other->expirationyear_);
  swap(strike_, other->strike_);
  swap(iscalloption_, other->iscalloption_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Instrument::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Instrument

// .streaminterface.Instrument.InstrType InstrumentType = 1;
void Instrument::clear_instrumenttype() {
  instrumenttype_ = 0;
}
::streaminterface::Instrument_InstrType Instrument::instrumenttype() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.InstrumentType)
  return static_cast< ::streaminterface::Instrument_InstrType >(instrumenttype_);
}
void Instrument::set_instrumenttype(::streaminterface::Instrument_InstrType value) {
  
  instrumenttype_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.InstrumentType)
}

// string UnderlyingSymbol = 2;
void Instrument::clear_underlyingsymbol() {
  underlyingsymbol_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Instrument::underlyingsymbol() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.UnderlyingSymbol)
  return underlyingsymbol_.Get();
}
void Instrument::set_underlyingsymbol(const ::std::string& value) {
  
  underlyingsymbol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.UnderlyingSymbol)
}
#if LANG_CXX11
void Instrument::set_underlyingsymbol(::std::string&& value) {
  
  underlyingsymbol_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.Instrument.UnderlyingSymbol)
}
#endif
void Instrument::set_underlyingsymbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  underlyingsymbol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.Instrument.UnderlyingSymbol)
}
void Instrument::set_underlyingsymbol(const char* value,
    size_t size) {
  
  underlyingsymbol_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.Instrument.UnderlyingSymbol)
}
::std::string* Instrument::mutable_underlyingsymbol() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.Instrument.UnderlyingSymbol)
  return underlyingsymbol_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Instrument::release_underlyingsymbol() {
  // @@protoc_insertion_point(field_release:streaminterface.Instrument.UnderlyingSymbol)
  
  return underlyingsymbol_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Instrument::unsafe_arena_release_underlyingsymbol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.Instrument.UnderlyingSymbol)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return underlyingsymbol_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Instrument::set_allocated_underlyingsymbol(::std::string* underlyingsymbol) {
  if (underlyingsymbol != NULL) {
    
  } else {
    
  }
  underlyingsymbol_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlyingsymbol,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.Instrument.UnderlyingSymbol)
}
void Instrument::unsafe_arena_set_allocated_underlyingsymbol(
    ::std::string* underlyingsymbol) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (underlyingsymbol != NULL) {
    
  } else {
    
  }
  underlyingsymbol_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      underlyingsymbol, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.Instrument.UnderlyingSymbol)
}

// int32 ExpirationDay = 3;
void Instrument::clear_expirationday() {
  expirationday_ = 0;
}
::google::protobuf::int32 Instrument::expirationday() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.ExpirationDay)
  return expirationday_;
}
void Instrument::set_expirationday(::google::protobuf::int32 value) {
  
  expirationday_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.ExpirationDay)
}

// int32 ExpirationMonth = 4;
void Instrument::clear_expirationmonth() {
  expirationmonth_ = 0;
}
::google::protobuf::int32 Instrument::expirationmonth() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.ExpirationMonth)
  return expirationmonth_;
}
void Instrument::set_expirationmonth(::google::protobuf::int32 value) {
  
  expirationmonth_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.ExpirationMonth)
}

// int32 ExpirationYear = 5;
void Instrument::clear_expirationyear() {
  expirationyear_ = 0;
}
::google::protobuf::int32 Instrument::expirationyear() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.ExpirationYear)
  return expirationyear_;
}
void Instrument::set_expirationyear(::google::protobuf::int32 value) {
  
  expirationyear_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.ExpirationYear)
}

// float Strike = 6;
void Instrument::clear_strike() {
  strike_ = 0;
}
float Instrument::strike() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.Strike)
  return strike_;
}
void Instrument::set_strike(float value) {
  
  strike_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.Strike)
}

// bool IsCallOption = 7;
void Instrument::clear_iscalloption() {
  iscalloption_ = false;
}
bool Instrument::iscalloption() const {
  // @@protoc_insertion_point(field_get:streaminterface.Instrument.IsCallOption)
  return iscalloption_;
}
void Instrument::set_iscalloption(bool value) {
  
  iscalloption_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.Instrument.IsCallOption)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeMessage::kTimestampFieldNumber;
const int TradeMessage::kInstrumentsFieldNumber;
const int TradeMessage::kPriceFieldNumber;
const int TradeMessage::kSizeFieldNumber;
const int TradeMessage::kExchangeFieldNumber;
const int TradeMessage::kBidPriceBBOFieldNumber;
const int TradeMessage::kAskPriceBBOFieldNumber;
const int TradeMessage::kBidSizeBBOFieldNumber;
const int TradeMessage::kAskSizeBBOFieldNumber;
const int TradeMessage::kBidExchangeBBOFieldNumber;
const int TradeMessage::kAskExchangeBBOFieldNumber;
const int TradeMessage::kDaysHighestPriceFieldNumber;
const int TradeMessage::kDaysLowestPriceFieldNumber;
const int TradeMessage::kDaysOpeningPriceFieldNumber;
const int TradeMessage::kDaysTotalVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeMessage::TradeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mktdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:streaminterface.TradeMessage)
}
TradeMessage::TradeMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  instruments_(arena) {
  protobuf_mktdata_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:streaminterface.TradeMessage)
}
TradeMessage::TradeMessage(const TradeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instruments_(from.instruments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange().size() > 0) {
    exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange(),
      GetArenaNoVirtual());
  }
  bidexchangebbo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bidexchangebbo().size() > 0) {
    bidexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bidexchangebbo(),
      GetArenaNoVirtual());
  }
  askexchangebbo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.askexchangebbo().size() > 0) {
    askexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.askexchangebbo(),
      GetArenaNoVirtual());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&daystotalvolume_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(daystotalvolume_));
  // @@protoc_insertion_point(copy_constructor:streaminterface.TradeMessage)
}

void TradeMessage::SharedCtor() {
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bidexchangebbo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askexchangebbo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daystotalvolume_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(daystotalvolume_));
  _cached_size_ = 0;
}

TradeMessage::~TradeMessage() {
  // @@protoc_insertion_point(destructor:streaminterface.TradeMessage)
  SharedDtor();
}

void TradeMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  exchange_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  bidexchangebbo_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  askexchangebbo_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TradeMessage::ArenaDtor(void* object) {
  TradeMessage* _this = reinterpret_cast< TradeMessage* >(object);
  (void)_this;
}
void TradeMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TradeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TradeMessage::descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TradeMessage& TradeMessage::default_instance() {
  protobuf_mktdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

TradeMessage* TradeMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TradeMessage>(arena);
}

void TradeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:streaminterface.TradeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruments_.Clear();
  exchange_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  bidexchangebbo_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  askexchangebbo_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daystotalvolume_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(daystotalvolume_));
  _internal_metadata_.Clear();
}

bool TradeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:streaminterface.TradeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .streaminterface.Instrument Instruments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instruments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Exchange = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), static_cast<int>(this->exchange().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.TradeMessage.Exchange"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BidPriceBBO = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bidpricebbo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float AskPriceBBO = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &askpricebbo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BidSizeBBO = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bidsizebbo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AskSizeBBO = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asksizebbo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BidExchangeBBO = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidexchangebbo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bidexchangebbo().data(), static_cast<int>(this->bidexchangebbo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.TradeMessage.BidExchangeBBO"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AskExchangeBBO = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_askexchangebbo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->askexchangebbo().data(), static_cast<int>(this->askexchangebbo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.TradeMessage.AskExchangeBBO"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DaysHighestPrice = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dayshighestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DaysLowestPrice = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dayslowestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DaysOpeningPrice = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &daysopeningprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DaysTotalVolume = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daystotalvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:streaminterface.TradeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:streaminterface.TradeMessage)
  return false;
#undef DO_
}

void TradeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:streaminterface.TradeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .streaminterface.Instrument Instruments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instruments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->instruments(static_cast<int>(i)), output);
  }

  // float Price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->price(), output);
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // string Exchange = 5;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.Exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->exchange(), output);
  }

  // float BidPriceBBO = 6;
  if (this->bidpricebbo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->bidpricebbo(), output);
  }

  // float AskPriceBBO = 7;
  if (this->askpricebbo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->askpricebbo(), output);
  }

  // uint32 BidSizeBBO = 8;
  if (this->bidsizebbo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bidsizebbo(), output);
  }

  // uint32 AskSizeBBO = 9;
  if (this->asksizebbo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->asksizebbo(), output);
  }

  // string BidExchangeBBO = 10;
  if (this->bidexchangebbo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bidexchangebbo().data(), static_cast<int>(this->bidexchangebbo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.BidExchangeBBO");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->bidexchangebbo(), output);
  }

  // string AskExchangeBBO = 11;
  if (this->askexchangebbo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->askexchangebbo().data(), static_cast<int>(this->askexchangebbo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.AskExchangeBBO");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->askexchangebbo(), output);
  }

  // float DaysHighestPrice = 12;
  if (this->dayshighestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->dayshighestprice(), output);
  }

  // float DaysLowestPrice = 13;
  if (this->dayslowestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->dayslowestprice(), output);
  }

  // float DaysOpeningPrice = 14;
  if (this->daysopeningprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->daysopeningprice(), output);
  }

  // uint32 DaysTotalVolume = 15;
  if (this->daystotalvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->daystotalvolume(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:streaminterface.TradeMessage)
}

::google::protobuf::uint8* TradeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:streaminterface.TradeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // repeated .streaminterface.Instrument Instruments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instruments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->instruments(static_cast<int>(i)), deterministic, target);
  }

  // float Price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->price(), target);
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // string Exchange = 5;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.Exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->exchange(), target);
  }

  // float BidPriceBBO = 6;
  if (this->bidpricebbo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->bidpricebbo(), target);
  }

  // float AskPriceBBO = 7;
  if (this->askpricebbo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->askpricebbo(), target);
  }

  // uint32 BidSizeBBO = 8;
  if (this->bidsizebbo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bidsizebbo(), target);
  }

  // uint32 AskSizeBBO = 9;
  if (this->asksizebbo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->asksizebbo(), target);
  }

  // string BidExchangeBBO = 10;
  if (this->bidexchangebbo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bidexchangebbo().data(), static_cast<int>(this->bidexchangebbo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.BidExchangeBBO");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bidexchangebbo(), target);
  }

  // string AskExchangeBBO = 11;
  if (this->askexchangebbo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->askexchangebbo().data(), static_cast<int>(this->askexchangebbo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.TradeMessage.AskExchangeBBO");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->askexchangebbo(), target);
  }

  // float DaysHighestPrice = 12;
  if (this->dayshighestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->dayshighestprice(), target);
  }

  // float DaysLowestPrice = 13;
  if (this->dayslowestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->dayslowestprice(), target);
  }

  // float DaysOpeningPrice = 14;
  if (this->daysopeningprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->daysopeningprice(), target);
  }

  // uint32 DaysTotalVolume = 15;
  if (this->daystotalvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->daystotalvolume(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:streaminterface.TradeMessage)
  return target;
}

size_t TradeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:streaminterface.TradeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .streaminterface.Instrument Instruments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->instruments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instruments(static_cast<int>(i)));
    }
  }

  // string Exchange = 5;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // string BidExchangeBBO = 10;
  if (this->bidexchangebbo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bidexchangebbo());
  }

  // string AskExchangeBBO = 11;
  if (this->askexchangebbo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->askexchangebbo());
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // float Price = 3;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // float BidPriceBBO = 6;
  if (this->bidpricebbo() != 0) {
    total_size += 1 + 4;
  }

  // float AskPriceBBO = 7;
  if (this->askpricebbo() != 0) {
    total_size += 1 + 4;
  }

  // uint32 BidSizeBBO = 8;
  if (this->bidsizebbo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bidsizebbo());
  }

  // uint32 AskSizeBBO = 9;
  if (this->asksizebbo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->asksizebbo());
  }

  // float DaysHighestPrice = 12;
  if (this->dayshighestprice() != 0) {
    total_size += 1 + 4;
  }

  // float DaysLowestPrice = 13;
  if (this->dayslowestprice() != 0) {
    total_size += 1 + 4;
  }

  // float DaysOpeningPrice = 14;
  if (this->daysopeningprice() != 0) {
    total_size += 1 + 4;
  }

  // uint32 DaysTotalVolume = 15;
  if (this->daystotalvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daystotalvolume());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TradeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:streaminterface.TradeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TradeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:streaminterface.TradeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:streaminterface.TradeMessage)
    MergeFrom(*source);
  }
}

void TradeMessage::MergeFrom(const TradeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:streaminterface.TradeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instruments_.MergeFrom(from.instruments_);
  if (from.exchange().size() > 0) {
    set_exchange(from.exchange());
  }
  if (from.bidexchangebbo().size() > 0) {
    set_bidexchangebbo(from.bidexchangebbo());
  }
  if (from.askexchangebbo().size() > 0) {
    set_askexchangebbo(from.askexchangebbo());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.bidpricebbo() != 0) {
    set_bidpricebbo(from.bidpricebbo());
  }
  if (from.askpricebbo() != 0) {
    set_askpricebbo(from.askpricebbo());
  }
  if (from.bidsizebbo() != 0) {
    set_bidsizebbo(from.bidsizebbo());
  }
  if (from.asksizebbo() != 0) {
    set_asksizebbo(from.asksizebbo());
  }
  if (from.dayshighestprice() != 0) {
    set_dayshighestprice(from.dayshighestprice());
  }
  if (from.dayslowestprice() != 0) {
    set_dayslowestprice(from.dayslowestprice());
  }
  if (from.daysopeningprice() != 0) {
    set_daysopeningprice(from.daysopeningprice());
  }
  if (from.daystotalvolume() != 0) {
    set_daystotalvolume(from.daystotalvolume());
  }
}

void TradeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:streaminterface.TradeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeMessage::CopyFrom(const TradeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:streaminterface.TradeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeMessage::IsInitialized() const {
  return true;
}

void TradeMessage::Swap(TradeMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TradeMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TradeMessage::UnsafeArenaSwap(TradeMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TradeMessage::InternalSwap(TradeMessage* other) {
  using std::swap;
  instruments_.InternalSwap(&other->instruments_);
  exchange_.Swap(&other->exchange_);
  bidexchangebbo_.Swap(&other->bidexchangebbo_);
  askexchangebbo_.Swap(&other->askexchangebbo_);
  swap(timestamp_, other->timestamp_);
  swap(price_, other->price_);
  swap(size_, other->size_);
  swap(bidpricebbo_, other->bidpricebbo_);
  swap(askpricebbo_, other->askpricebbo_);
  swap(bidsizebbo_, other->bidsizebbo_);
  swap(asksizebbo_, other->asksizebbo_);
  swap(dayshighestprice_, other->dayshighestprice_);
  swap(dayslowestprice_, other->dayslowestprice_);
  swap(daysopeningprice_, other->daysopeningprice_);
  swap(daystotalvolume_, other->daystotalvolume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TradeMessage::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TradeMessage

// uint64 Timestamp = 1;
void TradeMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TradeMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.Timestamp)
  return timestamp_;
}
void TradeMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.Timestamp)
}

// repeated .streaminterface.Instrument Instruments = 2;
int TradeMessage::instruments_size() const {
  return instruments_.size();
}
void TradeMessage::clear_instruments() {
  instruments_.Clear();
}
const ::streaminterface::Instrument& TradeMessage::instruments(int index) const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.Instruments)
  return instruments_.Get(index);
}
::streaminterface::Instrument* TradeMessage::mutable_instruments(int index) {
  // @@protoc_insertion_point(field_mutable:streaminterface.TradeMessage.Instruments)
  return instruments_.Mutable(index);
}
::streaminterface::Instrument* TradeMessage::add_instruments() {
  // @@protoc_insertion_point(field_add:streaminterface.TradeMessage.Instruments)
  return instruments_.Add();
}
::google::protobuf::RepeatedPtrField< ::streaminterface::Instrument >*
TradeMessage::mutable_instruments() {
  // @@protoc_insertion_point(field_mutable_list:streaminterface.TradeMessage.Instruments)
  return &instruments_;
}
const ::google::protobuf::RepeatedPtrField< ::streaminterface::Instrument >&
TradeMessage::instruments() const {
  // @@protoc_insertion_point(field_list:streaminterface.TradeMessage.Instruments)
  return instruments_;
}

// float Price = 3;
void TradeMessage::clear_price() {
  price_ = 0;
}
float TradeMessage::price() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.Price)
  return price_;
}
void TradeMessage::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.Price)
}

// uint32 Size = 4;
void TradeMessage::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 TradeMessage::size() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.Size)
  return size_;
}
void TradeMessage::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.Size)
}

// string Exchange = 5;
void TradeMessage::clear_exchange() {
  exchange_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TradeMessage::exchange() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.Exchange)
  return exchange_.Get();
}
void TradeMessage::set_exchange(const ::std::string& value) {
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.Exchange)
}
#if LANG_CXX11
void TradeMessage::set_exchange(::std::string&& value) {
  
  exchange_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.TradeMessage.Exchange)
}
#endif
void TradeMessage::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.TradeMessage.Exchange)
}
void TradeMessage::set_exchange(const char* value,
    size_t size) {
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.TradeMessage.Exchange)
}
::std::string* TradeMessage::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.TradeMessage.Exchange)
  return exchange_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::release_exchange() {
  // @@protoc_insertion_point(field_release:streaminterface.TradeMessage.Exchange)
  
  return exchange_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::unsafe_arena_release_exchange() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.TradeMessage.Exchange)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return exchange_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TradeMessage::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.TradeMessage.Exchange)
}
void TradeMessage::unsafe_arena_set_allocated_exchange(
    ::std::string* exchange) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      exchange, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.TradeMessage.Exchange)
}

// float BidPriceBBO = 6;
void TradeMessage::clear_bidpricebbo() {
  bidpricebbo_ = 0;
}
float TradeMessage::bidpricebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.BidPriceBBO)
  return bidpricebbo_;
}
void TradeMessage::set_bidpricebbo(float value) {
  
  bidpricebbo_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.BidPriceBBO)
}

// float AskPriceBBO = 7;
void TradeMessage::clear_askpricebbo() {
  askpricebbo_ = 0;
}
float TradeMessage::askpricebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.AskPriceBBO)
  return askpricebbo_;
}
void TradeMessage::set_askpricebbo(float value) {
  
  askpricebbo_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.AskPriceBBO)
}

// uint32 BidSizeBBO = 8;
void TradeMessage::clear_bidsizebbo() {
  bidsizebbo_ = 0u;
}
::google::protobuf::uint32 TradeMessage::bidsizebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.BidSizeBBO)
  return bidsizebbo_;
}
void TradeMessage::set_bidsizebbo(::google::protobuf::uint32 value) {
  
  bidsizebbo_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.BidSizeBBO)
}

// uint32 AskSizeBBO = 9;
void TradeMessage::clear_asksizebbo() {
  asksizebbo_ = 0u;
}
::google::protobuf::uint32 TradeMessage::asksizebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.AskSizeBBO)
  return asksizebbo_;
}
void TradeMessage::set_asksizebbo(::google::protobuf::uint32 value) {
  
  asksizebbo_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.AskSizeBBO)
}

// string BidExchangeBBO = 10;
void TradeMessage::clear_bidexchangebbo() {
  bidexchangebbo_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TradeMessage::bidexchangebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.BidExchangeBBO)
  return bidexchangebbo_.Get();
}
void TradeMessage::set_bidexchangebbo(const ::std::string& value) {
  
  bidexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.BidExchangeBBO)
}
#if LANG_CXX11
void TradeMessage::set_bidexchangebbo(::std::string&& value) {
  
  bidexchangebbo_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.TradeMessage.BidExchangeBBO)
}
#endif
void TradeMessage::set_bidexchangebbo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bidexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.TradeMessage.BidExchangeBBO)
}
void TradeMessage::set_bidexchangebbo(const char* value,
    size_t size) {
  
  bidexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.TradeMessage.BidExchangeBBO)
}
::std::string* TradeMessage::mutable_bidexchangebbo() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.TradeMessage.BidExchangeBBO)
  return bidexchangebbo_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::release_bidexchangebbo() {
  // @@protoc_insertion_point(field_release:streaminterface.TradeMessage.BidExchangeBBO)
  
  return bidexchangebbo_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::unsafe_arena_release_bidexchangebbo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.TradeMessage.BidExchangeBBO)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bidexchangebbo_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TradeMessage::set_allocated_bidexchangebbo(::std::string* bidexchangebbo) {
  if (bidexchangebbo != NULL) {
    
  } else {
    
  }
  bidexchangebbo_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bidexchangebbo,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.TradeMessage.BidExchangeBBO)
}
void TradeMessage::unsafe_arena_set_allocated_bidexchangebbo(
    ::std::string* bidexchangebbo) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bidexchangebbo != NULL) {
    
  } else {
    
  }
  bidexchangebbo_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bidexchangebbo, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.TradeMessage.BidExchangeBBO)
}

// string AskExchangeBBO = 11;
void TradeMessage::clear_askexchangebbo() {
  askexchangebbo_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TradeMessage::askexchangebbo() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.AskExchangeBBO)
  return askexchangebbo_.Get();
}
void TradeMessage::set_askexchangebbo(const ::std::string& value) {
  
  askexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.AskExchangeBBO)
}
#if LANG_CXX11
void TradeMessage::set_askexchangebbo(::std::string&& value) {
  
  askexchangebbo_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.TradeMessage.AskExchangeBBO)
}
#endif
void TradeMessage::set_askexchangebbo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  askexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.TradeMessage.AskExchangeBBO)
}
void TradeMessage::set_askexchangebbo(const char* value,
    size_t size) {
  
  askexchangebbo_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.TradeMessage.AskExchangeBBO)
}
::std::string* TradeMessage::mutable_askexchangebbo() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.TradeMessage.AskExchangeBBO)
  return askexchangebbo_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::release_askexchangebbo() {
  // @@protoc_insertion_point(field_release:streaminterface.TradeMessage.AskExchangeBBO)
  
  return askexchangebbo_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TradeMessage::unsafe_arena_release_askexchangebbo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.TradeMessage.AskExchangeBBO)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return askexchangebbo_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TradeMessage::set_allocated_askexchangebbo(::std::string* askexchangebbo) {
  if (askexchangebbo != NULL) {
    
  } else {
    
  }
  askexchangebbo_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), askexchangebbo,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.TradeMessage.AskExchangeBBO)
}
void TradeMessage::unsafe_arena_set_allocated_askexchangebbo(
    ::std::string* askexchangebbo) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (askexchangebbo != NULL) {
    
  } else {
    
  }
  askexchangebbo_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      askexchangebbo, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.TradeMessage.AskExchangeBBO)
}

// float DaysHighestPrice = 12;
void TradeMessage::clear_dayshighestprice() {
  dayshighestprice_ = 0;
}
float TradeMessage::dayshighestprice() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.DaysHighestPrice)
  return dayshighestprice_;
}
void TradeMessage::set_dayshighestprice(float value) {
  
  dayshighestprice_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.DaysHighestPrice)
}

// float DaysLowestPrice = 13;
void TradeMessage::clear_dayslowestprice() {
  dayslowestprice_ = 0;
}
float TradeMessage::dayslowestprice() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.DaysLowestPrice)
  return dayslowestprice_;
}
void TradeMessage::set_dayslowestprice(float value) {
  
  dayslowestprice_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.DaysLowestPrice)
}

// float DaysOpeningPrice = 14;
void TradeMessage::clear_daysopeningprice() {
  daysopeningprice_ = 0;
}
float TradeMessage::daysopeningprice() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.DaysOpeningPrice)
  return daysopeningprice_;
}
void TradeMessage::set_daysopeningprice(float value) {
  
  daysopeningprice_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.DaysOpeningPrice)
}

// uint32 DaysTotalVolume = 15;
void TradeMessage::clear_daystotalvolume() {
  daystotalvolume_ = 0u;
}
::google::protobuf::uint32 TradeMessage::daystotalvolume() const {
  // @@protoc_insertion_point(field_get:streaminterface.TradeMessage.DaysTotalVolume)
  return daystotalvolume_;
}
void TradeMessage::set_daystotalvolume(::google::protobuf::uint32 value) {
  
  daystotalvolume_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.TradeMessage.DaysTotalVolume)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDepthLevel::kPriceFieldNumber;
const int MarketDepthLevel::kSizeFieldNumber;
const int MarketDepthLevel::kExchangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDepthLevel::MarketDepthLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mktdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:streaminterface.MarketDepthLevel)
}
MarketDepthLevel::MarketDepthLevel(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_mktdata_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:streaminterface.MarketDepthLevel)
}
MarketDepthLevel::MarketDepthLevel(const MarketDepthLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange().size() > 0) {
    exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange(),
      GetArenaNoVirtual());
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&price_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:streaminterface.MarketDepthLevel)
}

void MarketDepthLevel::SharedCtor() {
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&price_)) + sizeof(size_));
  _cached_size_ = 0;
}

MarketDepthLevel::~MarketDepthLevel() {
  // @@protoc_insertion_point(destructor:streaminterface.MarketDepthLevel)
  SharedDtor();
}

void MarketDepthLevel::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  exchange_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void MarketDepthLevel::ArenaDtor(void* object) {
  MarketDepthLevel* _this = reinterpret_cast< MarketDepthLevel* >(object);
  (void)_this;
}
void MarketDepthLevel::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MarketDepthLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDepthLevel::descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDepthLevel& MarketDepthLevel::default_instance() {
  protobuf_mktdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDepthLevel* MarketDepthLevel::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MarketDepthLevel>(arena);
}

void MarketDepthLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:streaminterface.MarketDepthLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exchange_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&price_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool MarketDepthLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:streaminterface.MarketDepthLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float Price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Exchange = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), static_cast<int>(this->exchange().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.MarketDepthLevel.Exchange"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:streaminterface.MarketDepthLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:streaminterface.MarketDepthLevel)
  return false;
#undef DO_
}

void MarketDepthLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:streaminterface.MarketDepthLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->price(), output);
  }

  // uint32 Size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.MarketDepthLevel.Exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchange(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:streaminterface.MarketDepthLevel)
}

::google::protobuf::uint8* MarketDepthLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:streaminterface.MarketDepthLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->price(), target);
  }

  // uint32 Size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.MarketDepthLevel.Exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchange(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:streaminterface.MarketDepthLevel)
  return target;
}

size_t MarketDepthLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:streaminterface.MarketDepthLevel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Exchange = 3;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // float Price = 1;
  if (this->price() != 0) {
    total_size += 1 + 4;
  }

  // uint32 Size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDepthLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:streaminterface.MarketDepthLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDepthLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDepthLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:streaminterface.MarketDepthLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:streaminterface.MarketDepthLevel)
    MergeFrom(*source);
  }
}

void MarketDepthLevel::MergeFrom(const MarketDepthLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:streaminterface.MarketDepthLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exchange().size() > 0) {
    set_exchange(from.exchange());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void MarketDepthLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:streaminterface.MarketDepthLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDepthLevel::CopyFrom(const MarketDepthLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:streaminterface.MarketDepthLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDepthLevel::IsInitialized() const {
  return true;
}

void MarketDepthLevel::Swap(MarketDepthLevel* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MarketDepthLevel* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MarketDepthLevel::UnsafeArenaSwap(MarketDepthLevel* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MarketDepthLevel::InternalSwap(MarketDepthLevel* other) {
  using std::swap;
  exchange_.Swap(&other->exchange_);
  swap(price_, other->price_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDepthLevel::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDepthLevel

// float Price = 1;
void MarketDepthLevel::clear_price() {
  price_ = 0;
}
float MarketDepthLevel::price() const {
  // @@protoc_insertion_point(field_get:streaminterface.MarketDepthLevel.Price)
  return price_;
}
void MarketDepthLevel::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.MarketDepthLevel.Price)
}

// uint32 Size = 2;
void MarketDepthLevel::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 MarketDepthLevel::size() const {
  // @@protoc_insertion_point(field_get:streaminterface.MarketDepthLevel.Size)
  return size_;
}
void MarketDepthLevel::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.MarketDepthLevel.Size)
}

// string Exchange = 3;
void MarketDepthLevel::clear_exchange() {
  exchange_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MarketDepthLevel::exchange() const {
  // @@protoc_insertion_point(field_get:streaminterface.MarketDepthLevel.Exchange)
  return exchange_.Get();
}
void MarketDepthLevel::set_exchange(const ::std::string& value) {
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.MarketDepthLevel.Exchange)
}
#if LANG_CXX11
void MarketDepthLevel::set_exchange(::std::string&& value) {
  
  exchange_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.MarketDepthLevel.Exchange)
}
#endif
void MarketDepthLevel::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.MarketDepthLevel.Exchange)
}
void MarketDepthLevel::set_exchange(const char* value,
    size_t size) {
  
  exchange_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.MarketDepthLevel.Exchange)
}
::std::string* MarketDepthLevel::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.MarketDepthLevel.Exchange)
  return exchange_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MarketDepthLevel::release_exchange() {
  // @@protoc_insertion_point(field_release:streaminterface.MarketDepthLevel.Exchange)
  
  return exchange_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MarketDepthLevel::unsafe_arena_release_exchange() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.MarketDepthLevel.Exchange)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return exchange_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MarketDepthLevel::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.MarketDepthLevel.Exchange)
}
void MarketDepthLevel::unsafe_arena_set_allocated_exchange(
    ::std::string* exchange) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      exchange, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.MarketDepthLevel.Exchange)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BookDepthMessage::kTimestampFieldNumber;
const int BookDepthMessage::kInstrumentsFieldNumber;
const int BookDepthMessage::kBidBookLevelsFieldNumber;
const int BookDepthMessage::kAskBookLevelsFieldNumber;
const int BookDepthMessage::kNumBidLevelsFieldNumber;
const int BookDepthMessage::kNumAskLevelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BookDepthMessage::BookDepthMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mktdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:streaminterface.BookDepthMessage)
}
BookDepthMessage::BookDepthMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  instruments_(arena),
  bidbooklevels_(arena),
  askbooklevels_(arena) {
  protobuf_mktdata_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:streaminterface.BookDepthMessage)
}
BookDepthMessage::BookDepthMessage(const BookDepthMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instruments_(from.instruments_),
      bidbooklevels_(from.bidbooklevels_),
      askbooklevels_(from.askbooklevels_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&numasklevels_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(numasklevels_));
  // @@protoc_insertion_point(copy_constructor:streaminterface.BookDepthMessage)
}

void BookDepthMessage::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numasklevels_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(numasklevels_));
  _cached_size_ = 0;
}

BookDepthMessage::~BookDepthMessage() {
  // @@protoc_insertion_point(destructor:streaminterface.BookDepthMessage)
  SharedDtor();
}

void BookDepthMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void BookDepthMessage::ArenaDtor(void* object) {
  BookDepthMessage* _this = reinterpret_cast< BookDepthMessage* >(object);
  (void)_this;
}
void BookDepthMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BookDepthMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BookDepthMessage::descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BookDepthMessage& BookDepthMessage::default_instance() {
  protobuf_mktdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

BookDepthMessage* BookDepthMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BookDepthMessage>(arena);
}

void BookDepthMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:streaminterface.BookDepthMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruments_.Clear();
  bidbooklevels_.Clear();
  askbooklevels_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numasklevels_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(numasklevels_));
  _internal_metadata_.Clear();
}

bool BookDepthMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:streaminterface.BookDepthMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .streaminterface.Instrument Instruments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instruments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .streaminterface.MarketDepthLevel BidBookLevels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bidbooklevels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .streaminterface.MarketDepthLevel AskBookLevels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_askbooklevels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NumBidLevels = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numbidlevels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NumAskLevels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numasklevels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:streaminterface.BookDepthMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:streaminterface.BookDepthMessage)
  return false;
#undef DO_
}

void BookDepthMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:streaminterface.BookDepthMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .streaminterface.Instrument Instruments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instruments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->instruments(static_cast<int>(i)), output);
  }

  // repeated .streaminterface.MarketDepthLevel BidBookLevels = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidbooklevels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bidbooklevels(static_cast<int>(i)), output);
  }

  // repeated .streaminterface.MarketDepthLevel AskBookLevels = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->askbooklevels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->askbooklevels(static_cast<int>(i)), output);
  }

  // uint32 NumBidLevels = 5;
  if (this->numbidlevels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->numbidlevels(), output);
  }

  // uint32 NumAskLevels = 6;
  if (this->numasklevels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->numasklevels(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:streaminterface.BookDepthMessage)
}

::google::protobuf::uint8* BookDepthMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:streaminterface.BookDepthMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // repeated .streaminterface.Instrument Instruments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instruments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->instruments(static_cast<int>(i)), deterministic, target);
  }

  // repeated .streaminterface.MarketDepthLevel BidBookLevels = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidbooklevels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->bidbooklevels(static_cast<int>(i)), deterministic, target);
  }

  // repeated .streaminterface.MarketDepthLevel AskBookLevels = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->askbooklevels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->askbooklevels(static_cast<int>(i)), deterministic, target);
  }

  // uint32 NumBidLevels = 5;
  if (this->numbidlevels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->numbidlevels(), target);
  }

  // uint32 NumAskLevels = 6;
  if (this->numasklevels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->numasklevels(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:streaminterface.BookDepthMessage)
  return target;
}

size_t BookDepthMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:streaminterface.BookDepthMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .streaminterface.Instrument Instruments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->instruments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instruments(static_cast<int>(i)));
    }
  }

  // repeated .streaminterface.MarketDepthLevel BidBookLevels = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bidbooklevels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bidbooklevels(static_cast<int>(i)));
    }
  }

  // repeated .streaminterface.MarketDepthLevel AskBookLevels = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->askbooklevels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->askbooklevels(static_cast<int>(i)));
    }
  }

  // uint64 Timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 NumBidLevels = 5;
  if (this->numbidlevels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numbidlevels());
  }

  // uint32 NumAskLevels = 6;
  if (this->numasklevels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numasklevels());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BookDepthMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:streaminterface.BookDepthMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BookDepthMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BookDepthMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:streaminterface.BookDepthMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:streaminterface.BookDepthMessage)
    MergeFrom(*source);
  }
}

void BookDepthMessage::MergeFrom(const BookDepthMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:streaminterface.BookDepthMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instruments_.MergeFrom(from.instruments_);
  bidbooklevels_.MergeFrom(from.bidbooklevels_);
  askbooklevels_.MergeFrom(from.askbooklevels_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.numbidlevels() != 0) {
    set_numbidlevels(from.numbidlevels());
  }
  if (from.numasklevels() != 0) {
    set_numasklevels(from.numasklevels());
  }
}

void BookDepthMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:streaminterface.BookDepthMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BookDepthMessage::CopyFrom(const BookDepthMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:streaminterface.BookDepthMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookDepthMessage::IsInitialized() const {
  return true;
}

void BookDepthMessage::Swap(BookDepthMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BookDepthMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BookDepthMessage::UnsafeArenaSwap(BookDepthMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BookDepthMessage::InternalSwap(BookDepthMessage* other) {
  using std::swap;
  instruments_.InternalSwap(&other->instruments_);
  bidbooklevels_.InternalSwap(&other->bidbooklevels_);
  askbooklevels_.InternalSwap(&other->askbooklevels_);
  swap(timestamp_, other->timestamp_);
  swap(numbidlevels_, other->numbidlevels_);
  swap(numasklevels_, other->numasklevels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BookDepthMessage::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BookDepthMessage

// uint64 Timestamp = 1;
void BookDepthMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 BookDepthMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.Timestamp)
  return timestamp_;
}
void BookDepthMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.BookDepthMessage.Timestamp)
}

// repeated .streaminterface.Instrument Instruments = 2;
int BookDepthMessage::instruments_size() const {
  return instruments_.size();
}
void BookDepthMessage::clear_instruments() {
  instruments_.Clear();
}
const ::streaminterface::Instrument& BookDepthMessage::instruments(int index) const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.Instruments)
  return instruments_.Get(index);
}
::streaminterface::Instrument* BookDepthMessage::mutable_instruments(int index) {
  // @@protoc_insertion_point(field_mutable:streaminterface.BookDepthMessage.Instruments)
  return instruments_.Mutable(index);
}
::streaminterface::Instrument* BookDepthMessage::add_instruments() {
  // @@protoc_insertion_point(field_add:streaminterface.BookDepthMessage.Instruments)
  return instruments_.Add();
}
::google::protobuf::RepeatedPtrField< ::streaminterface::Instrument >*
BookDepthMessage::mutable_instruments() {
  // @@protoc_insertion_point(field_mutable_list:streaminterface.BookDepthMessage.Instruments)
  return &instruments_;
}
const ::google::protobuf::RepeatedPtrField< ::streaminterface::Instrument >&
BookDepthMessage::instruments() const {
  // @@protoc_insertion_point(field_list:streaminterface.BookDepthMessage.Instruments)
  return instruments_;
}

// repeated .streaminterface.MarketDepthLevel BidBookLevels = 3;
int BookDepthMessage::bidbooklevels_size() const {
  return bidbooklevels_.size();
}
void BookDepthMessage::clear_bidbooklevels() {
  bidbooklevels_.Clear();
}
const ::streaminterface::MarketDepthLevel& BookDepthMessage::bidbooklevels(int index) const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.BidBookLevels)
  return bidbooklevels_.Get(index);
}
::streaminterface::MarketDepthLevel* BookDepthMessage::mutable_bidbooklevels(int index) {
  // @@protoc_insertion_point(field_mutable:streaminterface.BookDepthMessage.BidBookLevels)
  return bidbooklevels_.Mutable(index);
}
::streaminterface::MarketDepthLevel* BookDepthMessage::add_bidbooklevels() {
  // @@protoc_insertion_point(field_add:streaminterface.BookDepthMessage.BidBookLevels)
  return bidbooklevels_.Add();
}
::google::protobuf::RepeatedPtrField< ::streaminterface::MarketDepthLevel >*
BookDepthMessage::mutable_bidbooklevels() {
  // @@protoc_insertion_point(field_mutable_list:streaminterface.BookDepthMessage.BidBookLevels)
  return &bidbooklevels_;
}
const ::google::protobuf::RepeatedPtrField< ::streaminterface::MarketDepthLevel >&
BookDepthMessage::bidbooklevels() const {
  // @@protoc_insertion_point(field_list:streaminterface.BookDepthMessage.BidBookLevels)
  return bidbooklevels_;
}

// repeated .streaminterface.MarketDepthLevel AskBookLevels = 4;
int BookDepthMessage::askbooklevels_size() const {
  return askbooklevels_.size();
}
void BookDepthMessage::clear_askbooklevels() {
  askbooklevels_.Clear();
}
const ::streaminterface::MarketDepthLevel& BookDepthMessage::askbooklevels(int index) const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.AskBookLevels)
  return askbooklevels_.Get(index);
}
::streaminterface::MarketDepthLevel* BookDepthMessage::mutable_askbooklevels(int index) {
  // @@protoc_insertion_point(field_mutable:streaminterface.BookDepthMessage.AskBookLevels)
  return askbooklevels_.Mutable(index);
}
::streaminterface::MarketDepthLevel* BookDepthMessage::add_askbooklevels() {
  // @@protoc_insertion_point(field_add:streaminterface.BookDepthMessage.AskBookLevels)
  return askbooklevels_.Add();
}
::google::protobuf::RepeatedPtrField< ::streaminterface::MarketDepthLevel >*
BookDepthMessage::mutable_askbooklevels() {
  // @@protoc_insertion_point(field_mutable_list:streaminterface.BookDepthMessage.AskBookLevels)
  return &askbooklevels_;
}
const ::google::protobuf::RepeatedPtrField< ::streaminterface::MarketDepthLevel >&
BookDepthMessage::askbooklevels() const {
  // @@protoc_insertion_point(field_list:streaminterface.BookDepthMessage.AskBookLevels)
  return askbooklevels_;
}

// uint32 NumBidLevels = 5;
void BookDepthMessage::clear_numbidlevels() {
  numbidlevels_ = 0u;
}
::google::protobuf::uint32 BookDepthMessage::numbidlevels() const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.NumBidLevels)
  return numbidlevels_;
}
void BookDepthMessage::set_numbidlevels(::google::protobuf::uint32 value) {
  
  numbidlevels_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.BookDepthMessage.NumBidLevels)
}

// uint32 NumAskLevels = 6;
void BookDepthMessage::clear_numasklevels() {
  numasklevels_ = 0u;
}
::google::protobuf::uint32 BookDepthMessage::numasklevels() const {
  // @@protoc_insertion_point(field_get:streaminterface.BookDepthMessage.NumAskLevels)
  return numasklevels_;
}
void BookDepthMessage::set_numasklevels(::google::protobuf::uint32 value) {
  
  numasklevels_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.BookDepthMessage.NumAskLevels)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kMessageCreatedTimestampFieldNumber;
const int DebugInfo::kMessageSentTimestampFieldNumber;
const int DebugInfo::kMessageNumberFieldNumber;
const int DebugInfo::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mktdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:streaminterface.DebugInfo)
}
DebugInfo::DebugInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_mktdata_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:streaminterface.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other().size() > 0) {
    other_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other(),
      GetArenaNoVirtual());
  }
  ::memcpy(&messagecreatedtimestamp_, &from.messagecreatedtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&messagenumber_) -
    reinterpret_cast<char*>(&messagecreatedtimestamp_)) + sizeof(messagenumber_));
  // @@protoc_insertion_point(copy_constructor:streaminterface.DebugInfo)
}

void DebugInfo::SharedCtor() {
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&messagecreatedtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagenumber_) -
      reinterpret_cast<char*>(&messagecreatedtimestamp_)) + sizeof(messagenumber_));
  _cached_size_ = 0;
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:streaminterface.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  other_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void DebugInfo::ArenaDtor(void* object) {
  DebugInfo* _this = reinterpret_cast< DebugInfo* >(object);
  (void)_this;
}
void DebugInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebugInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugInfo::descriptor() {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugInfo& DebugInfo::default_instance() {
  protobuf_mktdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DebugInfo>(arena);
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:streaminterface.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&messagecreatedtimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagenumber_) -
      reinterpret_cast<char*>(&messagecreatedtimestamp_)) + sizeof(messagenumber_));
  _internal_metadata_.Clear();
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:streaminterface.DebugInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 MessageCreatedTimestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &messagecreatedtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MessageSentTimestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &messagesenttimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MessageNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &messagenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Other = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other().data(), static_cast<int>(this->other().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "streaminterface.DebugInfo.Other"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:streaminterface.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:streaminterface.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:streaminterface.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MessageCreatedTimestamp = 1;
  if (this->messagecreatedtimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->messagecreatedtimestamp(), output);
  }

  // uint64 MessageSentTimestamp = 2;
  if (this->messagesenttimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->messagesenttimestamp(), output);
  }

  // uint64 MessageNumber = 3;
  if (this->messagenumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->messagenumber(), output);
  }

  // string Other = 4;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.DebugInfo.Other");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:streaminterface.DebugInfo)
}

::google::protobuf::uint8* DebugInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:streaminterface.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MessageCreatedTimestamp = 1;
  if (this->messagecreatedtimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->messagecreatedtimestamp(), target);
  }

  // uint64 MessageSentTimestamp = 2;
  if (this->messagesenttimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->messagesenttimestamp(), target);
  }

  // uint64 MessageNumber = 3;
  if (this->messagenumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->messagenumber(), target);
  }

  // string Other = 4;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "streaminterface.DebugInfo.Other");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->other(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:streaminterface.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:streaminterface.DebugInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Other = 4;
  if (this->other().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other());
  }

  // uint64 MessageCreatedTimestamp = 1;
  if (this->messagecreatedtimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->messagecreatedtimestamp());
  }

  // uint64 MessageSentTimestamp = 2;
  if (this->messagesenttimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->messagesenttimestamp());
  }

  // uint64 MessageNumber = 3;
  if (this->messagenumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->messagenumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:streaminterface.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:streaminterface.DebugInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:streaminterface.DebugInfo)
    MergeFrom(*source);
  }
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:streaminterface.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.other().size() > 0) {
    set_other(from.other());
  }
  if (from.messagecreatedtimestamp() != 0) {
    set_messagecreatedtimestamp(from.messagecreatedtimestamp());
  }
  if (from.messagesenttimestamp() != 0) {
    set_messagesenttimestamp(from.messagesenttimestamp());
  }
  if (from.messagenumber() != 0) {
    set_messagenumber(from.messagenumber());
  }
}

void DebugInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:streaminterface.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:streaminterface.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebugInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebugInfo::UnsafeArenaSwap(DebugInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  using std::swap;
  other_.Swap(&other->other_);
  swap(messagecreatedtimestamp_, other->messagecreatedtimestamp_);
  swap(messagesenttimestamp_, other->messagesenttimestamp_);
  swap(messagenumber_, other->messagenumber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugInfo::GetMetadata() const {
  protobuf_mktdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mktdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// uint64 MessageCreatedTimestamp = 1;
void DebugInfo::clear_messagecreatedtimestamp() {
  messagecreatedtimestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DebugInfo::messagecreatedtimestamp() const {
  // @@protoc_insertion_point(field_get:streaminterface.DebugInfo.MessageCreatedTimestamp)
  return messagecreatedtimestamp_;
}
void DebugInfo::set_messagecreatedtimestamp(::google::protobuf::uint64 value) {
  
  messagecreatedtimestamp_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.DebugInfo.MessageCreatedTimestamp)
}

// uint64 MessageSentTimestamp = 2;
void DebugInfo::clear_messagesenttimestamp() {
  messagesenttimestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DebugInfo::messagesenttimestamp() const {
  // @@protoc_insertion_point(field_get:streaminterface.DebugInfo.MessageSentTimestamp)
  return messagesenttimestamp_;
}
void DebugInfo::set_messagesenttimestamp(::google::protobuf::uint64 value) {
  
  messagesenttimestamp_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.DebugInfo.MessageSentTimestamp)
}

// uint64 MessageNumber = 3;
void DebugInfo::clear_messagenumber() {
  messagenumber_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DebugInfo::messagenumber() const {
  // @@protoc_insertion_point(field_get:streaminterface.DebugInfo.MessageNumber)
  return messagenumber_;
}
void DebugInfo::set_messagenumber(::google::protobuf::uint64 value) {
  
  messagenumber_ = value;
  // @@protoc_insertion_point(field_set:streaminterface.DebugInfo.MessageNumber)
}

// string Other = 4;
void DebugInfo::clear_other() {
  other_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& DebugInfo::other() const {
  // @@protoc_insertion_point(field_get:streaminterface.DebugInfo.Other)
  return other_.Get();
}
void DebugInfo::set_other(const ::std::string& value) {
  
  other_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:streaminterface.DebugInfo.Other)
}
#if LANG_CXX11
void DebugInfo::set_other(::std::string&& value) {
  
  other_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:streaminterface.DebugInfo.Other)
}
#endif
void DebugInfo::set_other(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  other_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:streaminterface.DebugInfo.Other)
}
void DebugInfo::set_other(const char* value,
    size_t size) {
  
  other_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:streaminterface.DebugInfo.Other)
}
::std::string* DebugInfo::mutable_other() {
  
  // @@protoc_insertion_point(field_mutable:streaminterface.DebugInfo.Other)
  return other_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* DebugInfo::release_other() {
  // @@protoc_insertion_point(field_release:streaminterface.DebugInfo.Other)
  
  return other_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* DebugInfo::unsafe_arena_release_other() {
  // @@protoc_insertion_point(field_unsafe_arena_release:streaminterface.DebugInfo.Other)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return other_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void DebugInfo::set_allocated_other(::std::string* other) {
  if (other != NULL) {
    
  } else {
    
  }
  other_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:streaminterface.DebugInfo.Other)
}
void DebugInfo::unsafe_arena_set_allocated_other(
    ::std::string* other) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (other != NULL) {
    
  } else {
    
  }
  other_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      other, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streaminterface.DebugInfo.Other)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace streaminterface

// @@protoc_insertion_point(global_scope)
